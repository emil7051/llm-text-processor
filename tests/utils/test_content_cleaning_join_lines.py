import pytest
from textcleaner.utils.content_cleaning import join_paragraph_lines


@pytest.mark.parametrize("input_text, expected_output", [
    # Basic case: single paragraph with internal newlines
    ("This is the first line.\nThis is the second line.", 
     "This is the first line. This is the second line."),

    # Multiple paragraphs separated by double newline
    ("Paragraph one, line one.\nParagraph one, line two.\n\nParagraph two.", 
     "Paragraph one, line one. Paragraph one, line two.\n\nParagraph two."),

    # Multiple paragraphs separated by newline with spaces
    ("Para 1 line 1.\nPara 1 line 2.\n \nPara 2 line 1.\nPara 2 line 2.",
     "Para 1 line 1. Para 1 line 2.\n\nPara 2 line 1. Para 2 line 2."),

    # Leading/trailing whitespace and multiple spaces generated by join
    ("  Leading space.\nFollowed by this.  \n\n  Next paragraph. \n  Trailing space.  ",
     "Leading space. Followed by this.\n\nNext paragraph. Trailing space."),

    # Already joined lines (should not change paragraph structure)
    ("This paragraph is already joined.\n\nSo is this one.", 
     "This paragraph is already joined.\n\nSo is this one."),

    # Empty input
    ("", ""),

    # Input with only whitespace
    ("   \n \n  ", ""), # Should strip down to nothing
    
    # Input with only newlines (paragraph breaks)
    ("\n\n\n", ""), # Should collapse to nothing after strip

    # Mixed single and double newlines
    ("Line 1\nLine 2\n\nLine 3\n\n\nLine 4\nLine 5",
     "Line 1 Line 2\n\nLine 3\n\nLine 4 Line 5")
])
def test_join_paragraph_lines(input_text, expected_output):
    """Test joining lines within paragraphs."""
    assert join_paragraph_lines(input_text) == expected_output 